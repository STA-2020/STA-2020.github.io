<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>【第一篇博客】- 如何使用github+Hexo搭建个人博客网站</title>
    <link href="/2020/10/14/%E3%80%90%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E3%80%91-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"/>
    <url>/2020/10/14/%E3%80%90%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E3%80%91-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<h2 id="什么是Hexo"><a href="#什么是Hexo" class="headerlink" title="什么是Hexo ?"></a><strong>什么是Hexo ?</strong></h2><p>Hexo是一款基于Node.js的静态博客框架，依赖少、易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上。这里我选用的是GitHub，一方面是易于和其他项目共同维护，另一方面后期可以依赖gitalk为博客添加评论模块。</p><h2 id="搭建步骤："><a href="#搭建步骤：" class="headerlink" title="搭建步骤："></a><strong>搭建步骤：</strong></h2><ul><li>GitHub创建个人仓库</li><li>安装Git</li><li>安装Node.js</li><li>安装Hexo</li><li>推送网站</li><li>更换主题</li><li>发布文章</li><li>个性化设置</li><li>个人网站域名设置</li><li>其他</li></ul><h3 id="GitHub创建个人仓库"><a href="#GitHub创建个人仓库" class="headerlink" title="GitHub创建个人仓库"></a><strong>GitHub创建个人仓库</strong></h3><p>登录到GitHub,如果没有GitHub帐号，使用你的邮箱注册GitHub帐号：<a href="https://github.com/">Github.com</a>，点击GitHub中的New repository创建新仓库，仓库名应该为：用户名.github.io，这个用户名使用你的GitHub帐号名称代替，这是固定写法。<br><br><img src="assets/markdown-img-paste-20201014163315141.png"><br></p><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a><strong>安装Git</strong></h3><p>什么是Git? 简单来说Git是开源的分布式版本控制系统，用于敏捷高效地处理项目。我们网站在本地搭建好了，需要使用Git同步到GitHub上。从Git官网下载：<a href="https://git-scm.com/download/win">Git - Downloading Package</a> 选择你的电脑系统版本对应的安装包，比如我的电脑是64位，则选择下载64位的安装包，下载后安装，在命令行里输入git测试是否安装成功，若安装失败，参看其他详细的Git安装教程。安装成功后，将你的Git与GitHub帐号绑定，鼠标右击打开Git Bash<br><br><img src="assets/markdown-img-paste-20201014163929761.png"><br></p><p>设置user.name和user.email配置信息：</p><pre><code class="hljs C">git config --global user.name <span class="hljs-string">&quot;你的GitHub用户名&quot;</span>git config --global user.email <span class="hljs-string">&quot;你的GitHub注册邮箱&quot;</span></code></pre><p><strong>ps：git config  –global 参数，有了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然你也可以对某个仓库指定的不同的用户名和邮箱。</strong></p><p>想要向github提交工程，可采用https和ssh两种方式：</p><ul><li>https： 每次提交、同步时都需要输入github账号与密码，不推荐使用；</li><li>ssh：需要为Github账户设置SSh Key，允许某台电脑向github发送请求。</li></ul><h4 id="为Github账户设置SSH-Key"><a href="#为Github账户设置SSH-Key" class="headerlink" title="为Github账户设置SSH Key"></a><strong>为Github账户设置SSH Key</strong></h4><p>首先检查是否已生成密钥 cd ~/.ssh，ls如果有3个文件，则密钥已经生成，id_rsa.pub就是公钥，此时可以打开我的电脑C:\Users\用户名.ssh 里面找到。<br><br><img src="assets/markdown-img-paste-20201014165546753.png"><br><br>如果没有生成，那么通过ssh-keygen -t rsa -C “Github账号(邮箱地址)”来生成。</p><ol><li>路径确认，直接按回车存默认路径即可</li><li>输入访问密码，用于每次对github仓库操作时的验证，可直接回车确认表示不添加密码</li><li>确认密码，无则回车确认<br><br><img src="assets/markdown-img-paste-20201014170204582.png"><br></li></ol><p>生成成功后，去对应目录C:\Users\用户名.ssh里用记事本打开id_rsa.pub，得到ssh key公钥。<br><br><img src="assets/markdown-img-paste-20201014170901263.png"><br></p><p>切换到github，展开个人头像的小三角，点击settings。<br>然后打开SSH keys菜单， 点击Add SSH key新增密钥，Title为标题，任意填即可。接着将id_rsa.pub文件中key粘贴到此，最后点击Add key添加密钥。<br><br><img src="assets/markdown-img-paste-20201014171222724.png"><br></p><p>在Git Bash中检测GitHub公钥设置是否成功，输入<code>ssh git@github.com</code> ：<br><br><img src="assets/markdown-img-paste-20201014172053324.png"><br><br>如上则说明成功。至此，Github账号的SSH key配置完成。</p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a><strong>安装Node.js</strong></h3><p>Hexo基于Node.js，Node.js下载地址：<a href="https://nodejs.org/en/download/">Download | Node.js</a> 下载安装包，注意安装Node.js会包含环境变量及npm的安装，安装后，检测Node.js是否安装成功，在命令行中输入 <code>node -v</code> :<br><br>检测npm是否安装成功，在命令行中输入 <code>npm -v</code> :<br><br><img src="assets/markdown-img-paste-20201014172551425.png"><br><br>到这了，安装Hexo的环境已经全部搭建完成。</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a><strong>安装Hexo</strong></h3><p>Hexo就是个人博客网站的框架，这里需要自己在电脑常里创建一个文件夹，可以命名为Blog，Hexo框架与以后你自己发布的网页都在这个文件夹中。创建好后，进入文件夹中，右击鼠标点击Git Bash Here<br><br><img src="assets/markdown-img-paste-20201014163929761.png"><br><br>使用npm命令安装Hexo，输入：<br><br>    <code>npm install -g hexo-cli</code><br></p><p>这个安装时间较长耐心等待，安装完成后，初始化我们的博客，输入：<br><br>    <code>hexo init blog</code><br></p><p><strong>注意，这里的命令都是作用在刚刚创建的Blog文件夹中。</strong></p><p>为了检测我们的网站雏形，输入 <code>cd blog</code> 进入到初始化博客时自动创建的blog文件夹，然后分别按顺序输入以下三条命令：</p><pre><code class="hljs properties"><span class="hljs-attr">hexo</span> <span class="hljs-string">n test</span><span class="hljs-attr">hexo</span> <span class="hljs-string">g</span><span class="hljs-attr">hexo</span> <span class="hljs-string">s</span></code></pre><p>完成后，打开浏览器输入地址： <code>localhost:4000</code> 打开本地网站进行预览。</p><h3 id="推送网站"><a href="#推送网站" class="headerlink" title="推送网站"></a><strong>推送网站</strong></h3><p>上面只是在本地预览，接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。在设置之前，需要解释一个概念，在blog根目录里的_config.yml文件称为站点配置文件，如下图<br><br><img src="assets/markdown-img-paste-20201014175551205.png"></p><p>进入根目录里的themes文件夹，在你的主题文件夹里面也有个_config.yml文件，这个称为主题配置文件，如下图<br><br><img src="assets/markdown-img-paste-20201014175722600.png"></p><p>首先需要通过修改站点配置文件_config.yml，将Hexo与Github关联起来，修改文件尾部的deploy。<br>翻到最后修改为：</p><p>deploy:<br><br>type: git<br><br>repo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上 .git<br><br>branch: GitHub仓库的分支名称，如master<br></p><p><img src="assets/markdown-img-paste-20201014193439577.png"></p><p>其实就是给hexo d 这个命令做相应的配置，让hexo知道你要把blog部署在哪个位置，很显然，我们部署在我们GitHub的仓库里。最后安装Git部署插件，输入命令：<br><br><code>npm install hexo-deployer-git --save</code></p><p>这时，我们分别输入三条命令：</p><pre><code class="hljs properties"><span class="hljs-attr">hexo</span> <span class="hljs-string">clean</span><span class="hljs-attr">hexo</span> <span class="hljs-string">g</span><span class="hljs-attr">hexo</span> <span class="hljs-string">d</span></code></pre><p>hexo d 就是部署网站命令，d是deploy的缩写。完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即  xxxx.github.io ，xxxx是GitHub用户名。此时，便可以打开你的博客主页。</p><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a><strong>更换主题</strong></h3><p>如果你不喜欢Hexo默认的主题，可以更换不同的主题，主题传送门：<a href="https://hexo.io/themes/">Themes</a> ，可以在下载满意的主题的源程序，将主题文件夹放在themes文件夹中，可以在blog目录中的themes文件夹中查看你自己主题是什么。比如把默认主题更改成Next主题，可通过git在线下载该主题资源，在blog目录中（就是命令行的位置处于blog目录）打开git bash输入：</p><p><code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></p><p>这是将Next主题下载到blog目录的themes主题下的next文件夹中。打开站点的_config.yml配置文件，修改主题为next<br><br><img src="assets/markdown-img-paste-20201014194923759.png"></p><p>这里安利一个我正在使用的主题fluid，主题资源地址： <a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid</a></p><h3 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a><strong>发布文章</strong></h3><p>我们开始正式发布上线博客文章，在命令行中输入：</p><p><code>hexo n &quot;博客名字&quot;</code></p><p>我们会发现在blog根目录下的source文件夹中的_post文件夹中多了一个 博客名字.md 文件，使用Markdown编辑器打开，就可以开始你的个人博客之旅了，Markdown常用的样式也就十来种，完全能够满足一般博文的样式要求。我所使用的MarkDown编辑器为<a href="https://atom.io/">Atom</a>，感兴趣的可以去了解一下。<br></p><p>通过带有预览样式的Markdown编辑器实时预览书写的博文样式，也可以通过命令 hexo s –debug 在本地浏览器的localhost:4000 预览博文效果。写好博文并且样式无误后，通过hexo g、hexo d 生成、部署网页。随后可以在浏览器中输入域名浏览。</p><h3 id="个性化设置"><a href="#个性化设置" class="headerlink" title="个性化设置"></a><strong>个性化设置</strong></h3><p>所谓的个性化设置就是根据个人需要添加不同的插件及功能。</p><p>基本的有：</p><p>在站点配置文件_config.yml修改基本的站点信息</p><p><img src="assets/markdown-img-paste-20201014201529679.png"></p><p>依次是网站标题、副标题、网站描述、作者、网站头像外部链接、网站语言、时区等。</p><p>这里我使用的主题是Fulid，具体的网页显示效果更改可以参考<a href="https://fluid-dev.github.io/hexo-fluid-docs/guide/">Fulid配置指南</a>这里自定义设置。</p><h3 id="个人网站域名设置"><a href="#个人网站域名设置" class="headerlink" title="个人网站域名设置"></a><strong>个人网站域名设置</strong></h3><p>虽然在Internet上已经可以访问我们的网站，但是网址是GitHub提供的:xxxx.github.io，而我们想使用我们自己的个性化域名，这就需要注册并绑定我们自己的域名。</p><p>国内主流的域名代理商有阿里云和腾讯云，这里我使用的是腾讯云（非免费，价格取决于所使用的域名，我购买的xyz域名在当前优惠期间首年1元）。</p><h4 id="域名注册"><a href="#域名注册" class="headerlink" title="域名注册"></a><strong>域名注册</strong></h4><p>打开 <a href="https://cloud.tencent.com/">腾讯云</a> 点击右上角的控制台进入用户服务管理，在搜索栏输入“域名注册”进入后便可以找到域名注册入口。具体流程参考下列图片：</p><p><img src="assets/markdown-img-paste-20201015094316404.png"></p><p><img src="assets/markdown-img-paste-20201015094428700.png"></p><p><img src="assets/markdown-img-paste-20201015094521440.png"></p><h4 id="个人博客绑定域名"><a href="#个人博客绑定域名" class="headerlink" title="个人博客绑定域名"></a><strong>个人博客绑定域名</strong></h4><p>在腾讯云注册好域名后，便可以将新域名与个人博客绑定在一起了（注意需要域名实名认证）。<br><br>首先在控制台界面搜索 “DNS解析 DNSPod”：</p><p><img src="assets/markdown-img-paste-20201015094126728.png"></p><p>然后在域名一栏点击 解析，并在其中添加三条解析记录，其中192.30.252.153是GitHub的地址，第三个记录类型是CNAME，CNAME的记录值是：用户名.github.io：</p><p><img src="assets/markdown-img-paste-2020101509244964.png"></p><p><img src="assets/markdown-img-paste-20201015093124474.png"></p><p>第二步，登录GitHub，进入之前创建的仓库，点击settings，在Custom domain一项，输入你的域名，点击Save保存：</p><p><img src="assets/markdown-img-paste-20201015093250378.png"></p><p>第三步，进入本地博客文件夹 ，进入blog/source目录下，创建一个无类型文件，文件名称CNAME，使用记事本打开文件并输入你的域名。<strong>注意，如果带有www，那么以后访问的时候必须带有www完整的域名才可以访问，但如果不带有www，以后访问的时候带不带www都可以访问。</strong></p><p><img src="assets/markdown-img-paste-20201015093741107.png"></p><p><img src="assets/markdown-img-paste-20201015093803610.png"></p><p>完成这三步，进入blog目录中，右击打开Git Bash Here，依次输入：</p><pre><code class="hljs properties"><span class="hljs-attr">hexo</span> <span class="hljs-string">clean</span><span class="hljs-attr">hexo</span> <span class="hljs-string">g</span><span class="hljs-attr">hexo</span> <span class="hljs-string">d</span></code></pre><p>这时候打开浏览器在地址栏输入你的个性化域名将会直接进入你自己搭建的网站。</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a><strong>其他</strong></h3><p>看到这里就说明你已经搭建了你的个人博客，之后便可以在里面记录或者分享自己的技术经验，技术是在交流中共同进步的，固步自封只会让自己落后在时代的浪潮中，在这里将我老师经常和我们说的一句话送给大家：热爱你选择的，选择你热爱的。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/10/13/hello-world/"/>
    <url>/2020/10/13/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
